const { chromium } = require('playwright');
const fs = require('fs').promises;
const config = require('./config/config.js');
const logger = require('./utils/logger.js'); 
const delays = require('./utils/delays.js'); 
const imageAnalyzer = require('./services/image-analyzer.js'); 
const BrowserManager = require('./core/browser-manager.js'); 
const commentParser = require('./services/comment-parser.js'); 
const commentGenerator = require('./services/comment-generator.js'); 
const commentBuffer = require('./services/comment-buffer.js');  

// ===== helpers: timeout wrapper + human wiggle =====
async function withTimeout(promise, ms, label) {
  let timerId;
  const timeout = new Promise((_, reject) => {
    timerId = setTimeout(() => reject(new Error(`${label} timeout after ${ms}ms`)), ms);
  });
  try {
    return await Promise.race([promise, timeout]);
  } finally {
    clearTimeout(timerId);
  }
}

async function humanWiggle(page) {
  try {
    const moves = 3 + Math.floor(Math.random() * 4);                                // 3..6
    for (let i = 0; i < moves; i += 1) {
      const x = 200 + Math.floor(Math.random() * 800);
      const y = 150 + Math.floor(Math.random() * 600);
      const steps = 3 + Math.floor(Math.random() * 4);
      await page.mouse.move(x, y, { steps });
      await page.waitForTimeout(80 + Math.floor(Math.random() * 240));             // 80..320ms
    }
    if (Math.random() < 0.7) {
      const deltaY = (Math.random() < 0.5 ? -1 : 1) * (200 + Math.floor(Math.random() * 600));
      await page.mouse.wheel(0, deltaY);
      await page.waitForTimeout(200 + Math.floor(Math.random() * 600));            // 200..800ms
    }
  } catch (_) {
    // ignore
  }
}
// ===== end helpers =====

class InstagramBot {
    constructor() {
        this.browserManager = new BrowserManager(config);
        this.page = null;
        this.config = {
      targetProfile: config.instagram.targetProfile,
      comment: config.instagram.comment,
      timeouts: config.timeouts,
      delays: config.delays
    };
  }
/**
 * –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –î–õ–Ø –ü–û–°–¢–û–Ø–ù–ù–û–ô –†–ê–ë–û–¢–´
 */
  async init() {
      try {
          // –£–õ–£–ß–®–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
          const profileUrl = this.config.targetProfile || this.config.profile?.username;
          
          if (!profileUrl) {
              console.error('‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
              console.error('üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª config/config.json');
              console.error('üìã –î–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "targetProfile": "https://www.instagram.com/username/"');
              throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞');
          }
          
          console.log(`üéØ –¶–µ–ª–µ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å: ${profileUrl}`);
          
          // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã
          const startHour = parseInt(process.env.WORKING_HOURS_START) || this.config.workingHours?.[0] || 9;
          const endHour = parseInt(process.env.WORKING_HOURS_END) || this.config.workingHours?.[1] || 18;
          console.log(`‚è∞ –†–∞–±–æ—á–∏–µ —á–∞—Å—ã: ${startHour}:00 - ${endHour}:00`);
          
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
          this.initializeServices();
          
          console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
          console.log('üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ');
          
          return true;
          
      } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error.message);
          return false;
      }
  }

  /**
   * –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ï–†–í–ò–°–û–í
   */
  initializeServices() {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤
      logger.info('üîß –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
  }

  async login() {
    try {
      console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ===');
      console.log('üîç BrowserManager.loadSession:', typeof this.browserManager.loadSession);
      console.log('üîç BrowserManager.saveSession:', typeof this.browserManager.saveSession);

      console.log('üîç –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏...');
      const sessionLoaded = await this.browserManager.loadSession();
      console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏:', sessionLoaded);

      logger.info('üîê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Instagram...');
      await this.page.goto('https://www.instagram.com', {
        waitUntil: 'domcontentloaded',
        timeout: this.config.timeouts.navigation
      });
           await this.page.waitForTimeout(3000);

      try {
        await this.page.waitForSelector('svg[aria-label="Home"], [aria-label="Home"], a[href="/"]', {
          timeout: 8000
        });
        logger.success('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
        return true;
      } catch {
               console.log('‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞');
               const hasEnvCredentials = process.env.INSTAGRAM_USERNAME && process.env.INSTAGRAM_PASSWORD;
        console.log('üîç –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ .env:', hasEnvCredentials ? '–Ω–∞–π–¥–µ–Ω—ã' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');

        logger.success('üîë –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
        logger.success('üìù –í–æ–π–¥–∏—Ç–µ –≤ Instagram –∏ –Ω–∞–∂–º–∏—Ç–µ Enter...');
        await new Promise((resolve) => {
          process.stdin.once('data', () => {
            logger.info('‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É...');
            resolve();
          });
        });
               await this.browserManager.saveSession();
        return true;
      }
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', { message: error.message });
      return false;
    }
  }

  // ‚úÖ –£–õ–£–ß–®–ï–ù–ù–´–ô –ø–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ—Å—Ç–æ–≤
  async findAndClickActualPost() {
    try {
      logger.action('–ò—â–µ–º –ù–ê–°–¢–û–Ø–©–ò–ï –ü–û–°–¢–´ (–∏—Å–∫–ª—é—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏ –∏—Å—Ç–æ—Ä–∏–∏)');
      logger.info('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ—Ñ–∏–ª—é...');
      await this.page.goto(this.config.targetProfile, {
        waitUntil: 'domcontentloaded',
        timeout: this.config.timeouts.navigation
      });
      await delays.betweenActions();

      // –¢—Ä–∏ –≤–æ–ª–Ω—ã: –±–µ–∑ —Å–∫—Ä–æ–ª–ª–∞, —Å—Ä–µ–¥–Ω–∏–π —Å–∫—Ä–æ–ª–ª, –≥–ª—É–±–æ–∫–∏–π —Å–∫—Ä–æ–ª–ª
      const waves = [0.0, 0.9, 1.8];

      for (let wave = 0; wave < waves.length; wave += 1) {
        if (waves[wave] > 0) {
          await this.page.evaluate((m) => window.scrollBy(0, Math.floor(window.innerHeight * m)), waves[wave]);
          await this.page.waitForTimeout(800 + Math.floor(Math.random() * 1600));
          await humanWiggle(this.page);
        }

        const analysisResults = await imageAnalyzer.analyzeAndFilterImages(this.page);
        const selectedPost = imageAnalyzer.selectBestPost(analysisResults);

        if (selectedPost && selectedPost.image) {
          logger.info('üñ±Ô∏è –ö–ª–∏–∫–∞–µ–º –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –ø–æ—Å—Ç–∞...');
          await selectedPost.image.click({ delay: 60 + Math.floor(Math.random() * 140) });
          await delays.waitForClickResponse();

          const postOpened = await this.page.evaluate(() => ({
            hasModal: !!document.querySelector('div[role="dialog"], div[aria-modal="true"], div[class*="modal"]'),
            hasPostUrl: window.location.pathname.includes('/p/') || window.location.pathname.includes('/reel/'),
            hasCommentField: !!document.querySelector('textarea, [contenteditable="true"]')
          }));

          logger.info(`üì± –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ: ${postOpened.hasModal ? '‚úÖ' : '‚ùå'}`);
          logger.info(`üîó URL –ø–æ—Å—Ç–∞: ${postOpened.hasPostUrl ? '‚úÖ' : '‚ùå'}`);
          logger.info(`üí¨ –ü–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: ${postOpened.hasCommentField ? '‚úÖ' : '‚ùå'}`);

          if (postOpened.hasModal || postOpened.hasPostUrl) {
            logger.success('‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!');
            return true;
          }
        }
      }

      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∏ –∫–ª–∏–∫–∞ –ø–æ –ø–æ—Å—Ç—É', { message: error.message });
      try {
        await this.page.screenshot({ path: 'post-click-error-screenshot.png', fullPage: true });
        logger.info('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏: post-click-error-screenshot.png');
      } catch (_) {}
      throw error;
    }
  }

  //  –£–õ–£–ß–®–ï–ù–ù–´–ô –ø–æ–∏—Å–∫ –ø–æ–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  async commentOnOpenPost() {
    logger.info(` –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ù–∞—á–∞–ª–æ commentOnOpenPost() - ${Date.now()}`);   
    try {
      logger.info(' –ò—â–µ–º –ø–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π...');
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
      await this.page.waitForTimeout(3000);
      
      //  –°–Ω–∞—á–∞–ª–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
      const pageAnalysis = await this.page.evaluate(() => {
        return {
          title: document.title,
          url: window.location.href,
          textareas: document.querySelectorAll('textarea').length,
          contentEditables: document.querySelectorAll('[contenteditable="true"]').length,
          forms: document.querySelectorAll('form').length,
          buttons: document.querySelectorAll('button').length,
          inputs: document.querySelectorAll('input').length,
          allElements: document.querySelectorAll('*').length
        };
      });
      
      logger.analysis(' –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–¢–†–ê–ù–ò–¶–´:');
      logger.analysis(`   URL: ${pageAnalysis.url}`);
      logger.analysis(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${pageAnalysis.title}`);
      logger.analysis(`   Textarea —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${pageAnalysis.textareas}`);
      logger.analysis(`   ContentEditable —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${pageAnalysis.contentEditables}`);
      logger.analysis(`   –§–æ—Ä–º: ${pageAnalysis.forms}`);
      logger.analysis(`   –ö–Ω–æ–ø–æ–∫: ${pageAnalysis.buttons}`);
      logger.analysis(`   Input —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${pageAnalysis.inputs}`);
      
      // ‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö
      const commentSelectors = [
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
        'textarea[aria-label*="–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" i]',
        'textarea[aria-label*="comment" i]',
        'textarea[placeholder*="–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" i]',
        'textarea[placeholder*="comment" i]',
        'textarea[aria-label="Add a comment‚Ä¶"]',
        'textarea[placeholder="Add a comment‚Ä¶"]',
        
        // –†—É—Å—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        'textarea[aria-label*="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]',
        'textarea[placeholder*="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]',
        'textarea[aria-label*="–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]',
        'textarea[placeholder*="–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]',
        
        // –í –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö
        '[role="dialog"] textarea',
        '[aria-modal="true"] textarea',
        '.modal textarea',
        
        // ContentEditable —ç–ª–µ–º–µ–Ω—Ç—ã
        '[role="textbox"][contenteditable="true"]',
        'div[contenteditable="true"][role="textbox"]',
        '[contenteditable="true"][data-text*="comment" i]',
        '[contenteditable="true"][placeholder*="comment" i]',
        
        // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ
        'form textarea',
        'textarea',
        
        // Fallback —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ (–∏—â–µ–º —Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–æ–π "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å")
        'button[type="submit"] ~ textarea',
        'button[aria-label*="Post" i] ~ textarea',
        'button[aria-label*="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å" i] ~ textarea'
      ];

      let commentField = null;
      let foundSelector = '';
      
      logger.info(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º ${commentSelectors.length} —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤...`);
      
      // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
      for (const selector of commentSelectors) {
        try {
          logger.info(`   –ü—Ä–æ–±—É–µ–º: ${selector}`);
          
          commentField = await this.page.waitForSelector(selector, { 
            timeout: 2000,
            state: 'visible'
          });
          
          if (commentField) {
            foundSelector = selector;
            logger.success(`‚úÖ –ù–ê–ô–î–ï–ù–û! –°–µ–ª–µ–∫—Ç–æ—Ä: ${selector}`);
            break;
          }
        } catch {
          logger.info(`   ‚ùå –ù–µ —Å—Ä–∞–±–æ—Ç–∞–ª: ${selector}`);
          continue;
        }
      }

      if (!commentField) {
        // ‚úÖ –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫–∞—Ç—å —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫
        logger.info('üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏...');
        
        const buttonSearch = await this.page.evaluate(() => {
          const buttons = document.querySelectorAll('button');
          const foundButtons = [];
          
          Array.from(buttons).forEach(btn => {
            const text = btn.textContent?.toLowerCase() || '';
            const ariaLabel = btn.getAttribute('aria-label')?.toLowerCase() || '';
            
            if (text.includes('–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å') || text.includes('post') ||
                ariaLabel.includes('–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å') || ariaLabel.includes('post')) {
              foundButtons.push({
                text: btn.textContent,
                ariaLabel: btn.getAttribute('aria-label'),
                hasNearbyTextarea: !!btn.parentElement?.querySelector('textarea')
              });
            }
          });
          
          return foundButtons;
        });
        
        logger.info(`   –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${buttonSearch.length}`);
        buttonSearch.forEach(btn => {
          logger.info(`     "${btn.text}" (—Ä—è–¥–æ–º textarea: ${btn.hasNearbyTextarea ? '‚úÖ' : '‚ùå'})`);
        });
        
        throw new Error('–ü–æ–ª–µ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–∏–º —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º');
      }

      //  –†–∞–±–æ—Ç–∞–µ–º —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º –ø–æ–ª–µ–º
      logger.info(' –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫ –≤–≤–æ–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è...');
      
      // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–æ–ª—é
      await commentField.scrollIntoViewIfNeeded();
      await delays.waitForClickResponse(); // –ñ–¥—ë–º –æ—Ç–∫–ª–∏–∫–∞
      
      // –ö–ª–∏–∫–∞–µ–º –ø–æ –ø–æ–ª—é
      logger.info(' –ö–ª–∏–∫–∞–µ–º –ø–æ –ø–æ–ª—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è...');
      await commentField.click();
      await delays.waitForClickResponse(); // –ñ–¥—ë–º –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –∫–ª–∏–∫

      // –î–û–ë–ê–í–ò–¢–¨ –°–Æ–î–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–£:
      try {
          // ========== –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –ò–ó –û–°–ù–û–í–ù–û–ì–û –ü–†–û–ï–ö–¢–ê ==========
          // –≠—Ç–∞–ø 0: –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê HTML –°–¢–†–£–ö–¢–£–†–´ INSTAGRAM (–ù–û–í–´–ô –≠–¢–ê–ü)
          logger.info('üî¨ –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Instagram...');
          await commentParser.debugInstagramStructure(this.page);          

          // –≠—Ç–∞–ø 1: –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
          logger.info(' –°–æ–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...');
          const parsedComments = await commentParser.parseCommentsFromPost(this.page);
          const styleAnalysis = commentParser.analyzeCommentStyle(parsedComments);

          // –≠—Ç–∞–ø 2: –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –±—É—Ñ–µ—Ä–∞ (–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
          await commentBuffer.ensureBufferReady(parsedComments, styleAnalysis);

          // –≠—Ç–∞–ø 3: –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–∑ –±—É—Ñ–µ—Ä–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ö–æ–∂–µ—Å—Ç–∏
          let selectedComment = await commentBuffer.getNextComment();

          // –≠—Ç–∞–ø 4: Fallback –µ—Å–ª–∏ –±—É—Ñ–µ—Ä –ø—É—Å—Ç
          if (!selectedComment) {
              logger.warning(' –ë—É—Ñ–µ—Ä –ø—É—Å—Ç! –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
              
              // –ü—ã—Ç–∞–µ–º—Å—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±—É—Ñ–µ—Ä
              const commentGenerator = require('./services/comment-generator.js');
              const emergencyComments = await commentGenerator.generateBatchComments(parsedComments);
              
              if (emergencyComments && emergencyComments.length > 0) {
                  await commentBuffer.addBatchComments(emergencyComments);
                  selectedComment = await commentBuffer.getNextComment();
              }
              
              // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –ø—É—Å—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
              if (!selectedComment) {
                  logger.warning(' –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ. –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.');
                  selectedComment = commentGenerator.generateSingleComment(parsedComments);
              }
          }

          // –≠—Ç–∞–ø 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
          if (!selectedComment || selectedComment.length < 10) {
              logger.warning(' –ü–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback.');
              const commentGenerator = require('./services/comment-generator.js');
              selectedComment = commentGenerator.generateSingleComment(parsedComments);
          }

          // –≠—Ç–∞–ø 6: –í–≤–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
          logger.info(' –í–≤–æ–¥–∏–º —É–º–Ω—ã–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...');
          logger.success(` –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: "${selectedComment.substring(0, 50)}..."`);
          
          // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –∏ –≤–≤–æ–¥–∏–º –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          await this.page.keyboard.press('Control+a');
          await this.page.keyboard.press('Delete');
          await this.page.keyboard.type(selectedComment);

          // –≠—Ç–∞–ø 7: –§–æ–Ω–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
          if (await commentBuffer.needsRefill()) {
              logger.info(' –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞...');
              // –ù–µ –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è - –ø—É—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ
              commentBuffer.refillBufferBackground(parsedComments, styleAnalysis).catch(error => {
                  logger.error('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:', error.message);
              });
          }

      } catch (integrationError) {
          logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:', integrationError.message);
          logger.debug('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', integrationError.stack);
          
          // Fallback –∫ –ø—Ä–æ—Å—Ç–æ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
          logger.info('üîÑ Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π');
          await this.page.keyboard.press('Control+a');
          await this.page.keyboard.press('Delete');
          await this.page.keyboard.type("üôÇ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω —Å –º–Ω–µ–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∞.");
      }

      logger.success('‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤–≤–µ–¥—ë–Ω!');
// ========== –ö–æ–Ω–µ—Ü –±–ª–æ–∫–∞ –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –ò–ó –û–°–ù–û–í–ù–û–ì–û –ü–†–û–ï–ö–¢–ê ==========
      await delays.waitForClickResponse(); // –ñ–¥—ë–º –æ—Ç–∫–ª–∏–∫–∞

      // ‚úÖ –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
      logger.info('üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"...');
      
      const publishButtons = [
        'button[type="submit"]',
        'button[aria-label*="Post" i]',
        'button[aria-label*="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å" i]',
        'button:has-text("Post")',
        'button:has-text("–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å")',
        '[role="button"][aria-label*="Post" i]'
      ];
      
      let publishButton = null;
      for (const selector of publishButtons) {
        try {
          publishButton = await this.page.waitForSelector(selector, { timeout: 2000 });
          if (publishButton) {
            logger.info(`‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: ${selector}`);
            break;
          }
        } catch {
          continue;
        }
      }
      
      if (publishButton) {
        logger.info('üì§ –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"...');
        await publishButton.click();
        await delays.waitForClickResponse();
      } else {
        logger.info('üì§ –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Enter...');
        await this.page.keyboard.press('Enter');
        await delays.waitForClickResponse();
      }
      
      // –ñ–¥—ë–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      await this.page.waitForTimeout(4000);
      
      logger.success('üéâ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
      
      // –î–û–ë–ê–í–ò–¢–¨: –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
      await commentParser.incrementPublishedCount();
      return true;
      
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
      
      try {
        await this.page.screenshot({ 
          path: 'comment-error-detailed-screenshot.png',
          fullPage: true 
        });
        logger.info('üì∏ –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏: comment-error-detailed-screenshot.png');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        const html = await this.page.content();
        await fs.writeFile('comment-error-page-source.html', html);
        logger.info('üìÑ HTML —Å–æ—Ö—Ä–∞–Ω—ë–Ω: comment-error-page-source.html');
      } catch {}
      
      return false;
    }
  }

  async close() {
    await this.browserManager.close();
  }

  /**
   * –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ –ë–û–¢–ê - –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞
   */
  async run() {
      let cycleCount = 0;
      let successCount = 0;
      let errorCount = 0;

      console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã');
      console.log('‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª: 15-20 –º–∏–Ω—É—Ç –º–µ–∂–¥—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏');
      
      while (true) {
          try {
              cycleCount++;
              
              // === –î–û–ë–ê–í–ò–¢–¨ –î–ò–ê–ì–ù–û–°–¢–ò–ö–£ –ó–î–ï–°–¨ ===
              console.log(`\nüîç [${new Date().toLocaleTimeString()}] === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¶–ò–ö–õ–ê #${cycleCount} ===`);
              
              // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ü–∏–∫–ª–æ–º
              console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è...');
              if (!delays.isActiveTime()) {
                  console.log(`üò¥ [${new Date().toLocaleTimeString()}] –í–Ω–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–∞—É–∑–∞ 30 –º–∏–Ω—É—Ç`);
                  await this.sleep(30 * 60 * 1000);
                  continue;
              }

              console.log(`üîÑ [${new Date().toLocaleTimeString()}] === –¶–ò–ö–õ #${cycleCount} ===`);
              
              // –í—ã–ø–æ–ª–Ω—è–µ–º –æ–¥–∏–Ω —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã
              console.log('üîç –ó–∞–ø—É—Å–∫–∞–µ–º executeWorkCycle...');
              const success = await this.executeWorkCycle();
              
              if (success) {
                  successCount++;
                  console.log(`‚úÖ [${new Date().toLocaleTimeString()}] –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
              } else {
                  errorCount++;
                  console.log(`‚ùå [${new Date().toLocaleTimeString()}] –¶–∏–∫–ª –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π`);
              }

              // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${successCount} —É—Å–ø–µ—à–Ω—ã—Ö, ${errorCount} –æ—à–∏–±–æ–∫ –∏–∑ ${cycleCount} —Ü–∏–∫–ª–æ–≤`);

              // –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ 15-20 –º–∏–Ω—É—Ç
              const pauseMinutes = this.getRandomPause();
              const pauseMs = pauseMinutes * 60 * 1000;
              
              console.log(`‚è≥ [${new Date().toLocaleTimeString()}] –ü–∞—É–∑–∞ ${pauseMinutes} –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è`);
              console.log(`üéØ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫: ${new Date(Date.now() + pauseMs).toLocaleTimeString()}`);
              
              await this.sleep(pauseMs);

          } catch (error) {
              errorCount++;
              console.error(`üí• [${new Date().toLocaleTimeString()}] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ:`, error.message);
              
              // –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º (5 –º–∏–Ω—É—Ç)
              console.log('‚è≥ –ü–∞—É–∑–∞ 5 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏...');
              await this.sleep(5 * 60 * 1000);
          }
      }
  }

  /**
   * –í–´–ü–û–õ–ù–ï–ù–ò–ï –û–î–ù–û–ì–û –†–ê–ë–û–ß–ï–ì–û –¶–ò–ö–õ–ê
   */
  async executeWorkCycle() {
    let browser = null;
    try {
      console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê executeWorkCycle ===');

      try {
        await this.browserManager.init();
        browser = this.browserManager.browser;
        this.page = this.browserManager.page;
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º BrowserManager (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)');
      } catch (error) {
        console.log('‚ö†Ô∏è BrowserManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
        const playwright = require('playwright');
        browser = await playwright.chromium.launch({
          headless: process.env.HEADLESS === 'true' || process.env.NODE_ENV === 'production',
          args: process.env.NODE_ENV === 'production'
            ? ['--no-sandbox', '--disable-setuid-sandbox', '--disable-dev-shm-usage']
            : []
        });
        this.page = await browser.newPage({
          viewport: { width: 1366, height: 768 },
          userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        });
      }

      if (!browser || !this.page) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä');
      }

      console.log('üîç –®–∞–≥ 3: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
      const loginSuccess = await this.login();
      if (!loginSuccess) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è');
      }

      console.log('üîç –®–∞–≥ 4: –ü–æ–∏—Å–∫ –∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞...');
      const commentSuccess = await this.findAndCommentPost();
      if (!commentSuccess) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç');
      }

      return true;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—á–µ–º —Ü–∏–∫–ª–µ: ${error.message}`);
      return false;
    } finally {
      if (this.browserManager.browser) {
        try {
          await this.browserManager.close();
          console.log('üîö BrowserManager –∑–∞–∫—Ä—ã—Ç');
        } catch (error) {
          console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è BrowserManager:', error.message);
        }
      } else if (browser) {
        try {
          await browser.close();
          console.log('üîö –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç –Ω–∞–ø—Ä—è–º—É—é');
        } catch (error) {
          console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:', error.message);
        }
      }
    }
  }

  /**
   * –ü–ï–†–ï–•–û–î –ö –ü–†–û–§–ò–õ–Æ
   */
  async navigateToProfile() {
      logger.info('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ—Ñ–∏–ª—é...');
      await this.page.goto(this.config.targetProfile, {
          waitUntil: 'domcontentloaded',
          timeout: this.config.timeouts.navigation
      });
      await delays.betweenActions();
  }

  /**
   * –ü–û–ò–°–ö –ò –ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–°–¢–ê
   */
  async findAndCommentPost() {
      try {
          console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê findAndCommentPost ===');
          
          console.log('üîç –í—ã–∑—ã–≤–∞–µ–º findAndClickActualPost...');
          const success = await this.findAndClickActualPost();
          
          console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç findAndClickActualPost:', success);
          if (!success) {
              throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏ –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—Ç');
          }
          
          console.log('üîç –í—ã–∑—ã–≤–∞–µ–º commentOnOpenPost...');
          const commentSuccess = await this.commentOnOpenPost();
          
          console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç commentOnOpenPost:', commentSuccess);
          return commentSuccess;
          
      } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞/–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞:', error.message);
          console.error('‚ùå Stack trace:', error.stack);
          return false;
      }
  }

  /**
   * –ì–ï–ù–ï–†–ê–¶–ò–Ø –°–õ–£–ß–ê–ô–ù–û–ô –ü–ê–£–ó–´ –ò–ó .ENV –ü–ï–†–ï–ú–ï–ù–ù–´–•
   */
  getRandomPause() {
      // –ß–∏—Ç–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏–∑ .env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      const minMinutes = parseInt(process.env.COMMENT_INTERVAL_MIN) || 15;
      const maxMinutes = parseInt(process.env.COMMENT_INTERVAL_MAX) || 20;
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
      if (minMinutes >= maxMinutes) {
          console.log(' –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –≤ .env, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
          return 17.5; // –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å ¬±10%
      const baseInterval = Math.random() * (maxMinutes - minMinutes) + minMinutes;
      const variance = baseInterval * 0.1 * (Math.random() - 0.5); 
      const finalMinutes = baseInterval + variance;
      
      // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–µ—Å—è—Ç—ã—Ö –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑—É–º–Ω—ã–º–∏ –ø—Ä–µ–¥–µ–ª–∞–º–∏
      const result = Math.max(5, Math.min(60, Math.round(finalMinutes * 10) / 10));
      
      console.log(` –ò–Ω—Ç–µ—Ä–≤–∞–ª –∏–∑ .env: ${minMinutes}-${maxMinutes} –º–∏–Ω ‚Üí –≤—ã–±—Ä–∞–Ω–æ: ${result} –º–∏–Ω`);
      return result;
  }

  /**
   * –£–õ–£–ß–®–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –°–ù–ê –° –ü–†–ï–†–´–í–ê–ù–ò–ï–ú
   */
  async sleep(ms) {
      return new Promise((resolve) => {
          const timeout = setTimeout(resolve, ms);
          
          // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ—Ä–≤–∞—Ç—å —Å–æ–Ω –ø–æ —Å–∏–≥–Ω–∞–ª—É (–¥–ª—è graceful shutdown)
          process.once('SIGINT', () => {
              clearTimeout(timeout);
              console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏');
              process.exit(0);
          });
          
          process.once('SIGTERM', () => {
              clearTimeout(timeout);
              console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è');
              process.exit(0);
          });
      });
  }
}

/**
 * –ó–ê–ü–£–°–ö –ë–û–¢–ê –í –ü–û–°–¢–û–Ø–ù–ù–û–ú –†–ï–ñ–ò–ú–ï
 */
async function startBot() {
    const bot = new InstagramBot();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    process.on('SIGINT', () => {
        console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (Ctrl+C)');
        console.log('üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π...');
        process.exit(0);
    });
    
    process.on('SIGTERM', () => {
        console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è');
        process.exit(0);
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    const initSuccess = await bot.init();
    if (!initSuccess) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞');
        process.exit(1);
    }

    // –ó–∞–ø—É—Å–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
    await bot.run();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if (require.main === module) {
    startBot().catch(error => {
        console.error('üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
        process.exit(1);
    });
}
