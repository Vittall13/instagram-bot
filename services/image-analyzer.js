/**
 * –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤ Instagram
 * –û—Ç–¥–µ–ª—è–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø–æ—Å—Ç—ã –æ—Ç –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ –∏ –∏—Å—Ç–æ—Ä–∏–π
 */

const logger = require('../utils/logger.js');

class ImageAnalyzer {
    constructor() {
        this.config = {
            // –†–∞–∑–º–µ—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            minPostSize: 200,           // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –ø–æ—Å—Ç–∞
            maxProfilePhotoSize: 150,   // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
            profilePhotoRatio: 1.0,     // –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ç–æ (–∫–≤–∞–¥—Ä–∞—Ç)
            
            // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            storyKeywords: ['story', '–∏—Å—Ç–æ—Ä–∏—è', '—Å—Ç–æ—Ä–∏—Å'],
            profileKeywords: ['profile', '–ø—Ä–æ—Ñ–∏–ª—å', 'avatar', '–∞–≤–∞—Ç–∞—Ä']
        };
    }

    /**
     * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–≥–æ —Ç–∏–ø
     * @param {Object} image - –≠–ª–µ–º–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     * @param {Object} boundingBox - –†–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è  
     * @param {string} caption - –ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
     */
    async analyzeImage(image, boundingBox, caption = '') {
        const analysis = {
            width: boundingBox.width,
            height: boundingBox.height,
            ratio: boundingBox.width / boundingBox.height,
            caption: caption,
            isProfilePhoto: false,
            isStory: false,
            isRealPost: false,
            isClickable: false
        };

        // –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞
        analysis.isProfilePhoto = this.isProfilePhoto(boundingBox);
        analysis.isStory = this.isStory(boundingBox, caption);
        analysis.isRealPost = this.isRealPost(boundingBox, caption);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
        analysis.isClickable = await this.isClickable(image);

        return analysis;
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
     */
    isProfilePhoto(boundingBox) {
        const { width, height } = boundingBox;
        const ratio = width / height;
        
        // –ü—Ä–æ—Ñ–∏–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –æ–±—ã—á–Ω–æ –º–∞–ª–µ–Ω—å–∫–∏–µ –∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ
        return (
            width <= this.config.maxProfilePhotoSize ||
            height <= this.config.maxProfilePhotoSize ||
            Math.abs(ratio - this.config.profilePhotoRatio) < 0.1
        );
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–µ–π
     */
    isStory(boundingBox, caption) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –ø–æ–¥–ø–∏—Å–∏
        const lowerCaption = caption.toLowerCase();
        const hasStoryKeywords = this.config.storyKeywords.some(keyword => 
            lowerCaption.includes(keyword)
        );

        // –ò—Å—Ç–æ—Ä–∏–∏ –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω (9:16)
        const ratio = boundingBox.width / boundingBox.height;
        const isStoryRatio = ratio < 0.7; // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

        return hasStoryKeywords || isStoryRatio;
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç–æ—è—â–∏–º –ø–æ—Å—Ç–æ–º
     */
    isRealPost(boundingBox, caption) {
        const { width, height } = boundingBox;
        
        // –ù–∞—Å—Ç–æ—è—â–∏–µ –ø–æ—Å—Ç—ã –æ–±—ã—á–Ω–æ –±–æ–ª—å—à–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        const isBigEnough = width >= this.config.minPostSize && height >= this.config.minPostSize;
        
        // –ù–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–º —Ñ–æ—Ç–æ –∏–ª–∏ –∏—Å—Ç–æ—Ä–∏–µ–π
        const notProfilePhoto = !this.isProfilePhoto(boundingBox);
        const notStory = !this.isStory(boundingBox, caption);
        
        return isBigEnough && notProfilePhoto && notStory;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    async isClickable(image) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º
            const clickableParent = await image.evaluateHandle(el => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π
                let current = el;
                while (current && current.tagName !== 'BODY') {
                    if (
                        current.tagName === 'A' ||
                        current.tagName === 'BUTTON' ||
                        current.getAttribute('role') === 'button' ||
                        current.style.cursor === 'pointer' ||
                        current.hasAttribute('onclick')
                    ) {
                        return current;
                    }
                    current = current.parentElement;
                }
                return null;
            });

            const isClickable = await clickableParent.evaluate(el => el !== null);
            await clickableParent.dispose();
            
            return isClickable;
        } catch (error) {
            logger.debug(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏: ${error.message}`);
            return false;
        }
    }

    /**
     * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∏—Ö
     */
    async analyzeAndFilterImages(page) {
        try {
            logger.info('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
            
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const images = await page.$$('img');
            
            const analysisResults = {
                total: images.length,
                profilePhotos: 0,
                stories: 0,
                realPosts: 0,
                clickablePosts: [],
                allAnalysis: []
            };

            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            for (let i = 0; i < images.length; i++) {
                const image = images[i];
                
                try {
                    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
                    const boundingBox = await image.boundingBox();
                    if (!boundingBox) continue;

                    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å—å (–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π —Ç–µ–∫—Å—Ç)
                    const caption = await this.extractCaption(image);
                    
                    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    const analysis = await this.analyzeImage(image, boundingBox, caption);
                    
                    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    if (analysis.isProfilePhoto) analysisResults.profilePhotos++;
                    if (analysis.isStory) analysisResults.stories++;
                    if (analysis.isRealPost) analysisResults.realPosts++;
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã
                    if (analysis.isRealPost && analysis.isClickable) {
                        analysisResults.clickablePosts.push({
                            image: image,
                            analysis: analysis,
                            index: i + 1
                        });
                    }

                    analysisResults.allAnalysis.push(analysis);
                    
                } catch (error) {
                    logger.debug(`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${i + 1}: ${error.message}`);
                }
            }

            // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
            this.logAnalysisResults(analysisResults);
            
            return analysisResults;
            
        } catch (error) {
            logger.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π', { message: error.message });
            throw error;
        }
    }

    /**
     * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
     */
    async extractCaption(image) {
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–¥–ø–∏—Å—å —Ä—è–¥–æ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            const caption = await image.evaluate(img => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º alt –∞—Ç—Ä–∏–±—É—Ç
                if (img.alt && img.alt.length > 10) {
                    return img.alt;
                }

                // –ò—â–µ–º —Ç–µ–∫—Å—Ç –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
                let parent = img.parentElement;
                let attempts = 0;
                while (parent && attempts < 3) {
                    const textContent = parent.textContent || '';
                    if (textContent.length > 10 && textContent.length < 500) {
                        return textContent.substring(0, 200);
                    }
                    parent = parent.parentElement;
                    attempts++;
                }

                return '';
            });

            return caption || '';
        } catch (error) {
            return '';
        }
    }

    /**
     * –õ–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
     */
    logAnalysisResults(results) {
        logger.analysis('–ê–ù–ê–õ–ò–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –° –§–ò–õ–¨–¢–†–ê–¶–ò–ï–ô', {
            '–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π': results.total,
            '–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è': results.profilePhotos,
            '–ò—Å—Ç–æ—Ä–∏–∏': results.stories,
            '–ù–∞—Å—Ç–æ—è—â–∏–µ –ø–æ—Å—Ç—ã': results.realPosts,
            '–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã': results.clickablePosts.length
        });

        if (results.clickablePosts.length > 0) {
            logger.success('\nüéØ –ù–ê–ô–î–ï–ù–ù–´–ï –ü–û–°–¢–´:');
            
            results.clickablePosts.forEach((post, index) => {
                const analysis = post.analysis;
                logger.info(`   ${index + 1}. –†–∞–∑–º–µ—Ä: ${analysis.width}x${analysis.height}, –ü–æ–¥–ø–∏—Å—å: ${analysis.caption.substring(0, 80)}...`);
                logger.info(`      –ö–ª–∏–∫–∞–±–µ–ª—å–Ω–æ: ‚úÖ`);
            });
        }
    }

    /**
     * –í—ã–±–∏—Ä–∞–µ—Ç –ª—É—á—à–∏–π –ø–æ—Å—Ç –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    selectBestPost(analysisResults) {
        const posts = analysisResults.clickablePosts;
        
        if (posts.length === 0) {
            logger.warning('–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return null;
        }

        // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–æ—Å—Ç
        const selectedPost = posts[0];
        const analysis = selectedPost.analysis;

        logger.success('\nüéØ –í–´–ë–ò–†–ê–ï–ú –ü–ï–†–í–´–ô –ü–û–°–¢:');
        logger.info(`   –†–∞–∑–º–µ—Ä: ${analysis.width}x${analysis.height}`);
        logger.info(`   –ü–æ–¥–ø–∏—Å—å: ${analysis.caption}`);
        logger.info(`   –ö–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: ‚úÖ`);

        return selectedPost;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
module.exports = new ImageAnalyzer();
