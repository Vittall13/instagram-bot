/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è Instagram –±–æ—Ç–∞
 * –°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */

const logger = require('../utils/logger.js');

class CommentGenerator {
    constructor() {
        this.templates = [
            // –®–∞–±–ª–æ–Ω—ã –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            "–û—Ç–ª–∏—á–Ω–æ —Å–∫–∞–∑–∞–Ω–æ! –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —ç—Ç—É –ø–æ–∑–∏—Ü–∏—é.",
            "–û—á–µ–Ω—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–∞–∫–æ–π –≤–∞–∂–Ω—ã–π –ø–æ—Å—Ç.",
            "–ê–±—Å–æ–ª—é—Ç–Ω–æ —Å–æ–≥–ª–∞—Å–µ–Ω —Å –∫–∞–∂–¥—ã–º —Å–ª–æ–≤–æ–º. –ú—É–¥—Ä—ã–µ –º—ã—Å–ª–∏.",
            "–ë—Ä–∞–≤–æ! –ò–º–µ–Ω–Ω–æ —Ç–∞–∫ –∏ –Ω—É–∂–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –æ –≤–∞–∂–Ω—ã—Ö –≤–µ—â–∞—Ö.",
            "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω–æ. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ.",
            
            // –®–∞–±–ª–æ–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏  
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –≤—Å–µ —Å—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!",
            "–û—á–µ–Ω—å –≤–∞–∂–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è. –†–µ—Å–ø–µ–∫—Ç!",
            "–ò–º–µ–Ω–Ω–æ —ç—Ç–∏ –º—ã—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–Ω–æ—Å–∏—Ç—å –¥–æ –ª—é–¥–µ–π. –ú–æ–ª–æ–¥–µ—Ü!",
            "–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è! –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–¥–µ–ª—è—é —ç—Ç–∏ –≤–∑–≥–ª—è–¥—ã.",
            "–ü—Ä–∞–≤–∏–ª—å–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç–µ! –¢–∞–∫–∏–µ —Å–ª–æ–≤–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥—è—Ç –æ—Ç–∫–ª–∏–∫.",
            
            // –®–∞–±–ª–æ–Ω—ã –≤–æ—Å—Ö–∏—â–µ–Ω–∏—è
            "–í—Å–µ–≥–¥–∞ –≤–æ—Å—Ö–∏—â–∞—é—Å—å —Ç–∞–∫–∏–º–∏ –º—É–¥—Ä—ã–º–∏ —Å–ª–æ–≤–∞–º–∏!",
            "–ö–∞–∫ —Ç–æ—á–Ω–æ –ø–æ–¥–º–µ—á–µ–Ω–æ! –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–æ—è—â–∏–µ –º—ã—Å–ª–∏.",
            "–û—á–µ–Ω—å –≥–ª—É–±–æ–∫–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è. –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø–æ—Å—Ç!",
            "–¢–∞–∫–∏–µ —Å–ª–æ–≤–∞ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç –∏ –¥–∞—é—Ç —Å–∏–ª—ã. –°–ø–∞—Å–∏–±–æ!",
            "–ú–æ—â–Ω–æ –∏ –ø–æ –¥–µ–ª—É! –£–≤–∞–∂–µ–Ω–∏–µ –∑–∞ —Ç–∞–∫—É—é –ø–æ–∑–∏—Ü–∏—é."
        ];
        
        this.usedTemplates = new Set(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞ –∏ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
     */
    generateComment(postContext = null, parsedComments = [], styleAnalysis = null) {
        try {
            logger.info('ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...');
            
            // –í—ã–±–∏—Ä–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
            const availableTemplates = this.templates.filter(
                template => !this.usedTemplates.has(template)
            );
            
            // –ï—Å–ª–∏ –≤—Å–µ —à–∞–±–ª–æ–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã - –æ—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            if (availableTemplates.length === 0) {
                logger.info('üîÑ –í—Å–µ —à–∞–±–ª–æ–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã, –æ—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é...');
                this.usedTemplates.clear();
                availableTemplates.push(...this.templates);
            }
            
            // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —à–∞–±–ª–æ–Ω
            const selectedTemplate = availableTemplates[
                Math.floor(Math.random() * availableTemplates.length)
            ];
            
            // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π
            this.usedTemplates.add(selectedTemplate);
            
            // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI API
            const generatedComment = this.enhanceComment(
                selectedTemplate, 
                postContext, 
                parsedComments, 
                styleAnalysis
            );
            
            logger.success(`‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: "${generatedComment.substring(0, 50)}..."`);
            
            return {
                text: generatedComment,
                source: 'template',
                confidence: 0.8,
                uniqueness: this.calculateUniqueness(generatedComment, parsedComments)
            };
            
        } catch (error) {
            logger.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è', { message: error.message });
            
            // Fallback - –ø—Ä–æ—Å—Ç–µ–π—à–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            return {
                text: "üôÇ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω —Å –º–Ω–µ–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∞.",
                source: 'fallback',
                confidence: 0.5,
                uniqueness: 0.3
            };
        }
    }

    /**
     * –£–ª—É—á—à–∞–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     */
    enhanceComment(baseComment, postContext, parsedComments, styleAnalysis) {
        let enhanced = baseComment;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∏–ª—è
        if (styleAnalysis && styleAnalysis.averageLength > 100) {
            // –î–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏
            const additions = [
                " –≠—Ç–æ –æ—á–µ–Ω—å –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —Ç–µ–º–∞.",
                " –í—Å–µ–≥–¥–∞ –≤–∞–∂–Ω–æ –æ–± —ç—Ç–æ–º –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å.",
                " –¢–∞–∫–∏–µ –º—ã—Å–ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ —Ü–µ–Ω–Ω—ã —Å–µ–≥–æ–¥–Ω—è.",
                " –ù—É–∂–Ω—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è.",
                " –≠—Ç–æ –¥–æ—Å—Ç–æ–π–Ω–æ —É–≤–∞–∂–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏."
            ];
            
            if (Math.random() < 0.4) { // 40% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                const addition = additions[Math.floor(Math.random() * additions.length)];
                enhanced += addition;
            }
        }
        
        return enhanced;
    }

    /**
     * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
     */
    calculateUniqueness(comment, existingComments) {
        if (!existingComments || existingComments.length === 0) {
            return 1.0;
        }
        
        const commentWords = comment.toLowerCase().split(/\s+/);
        let maxSimilarity = 0;
        
        existingComments.forEach(existing => {
            const existingWords = existing.toLowerCase().split(/\s+/);
            const commonWords = commentWords.filter(word => existingWords.includes(word));
            const similarity = commonWords.length / Math.max(commentWords.length, existingWords.length);
            maxSimilarity = Math.max(maxSimilarity, similarity);
        });
        
        return Math.max(0, 1 - maxSimilarity);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
     */
    generateMultipleComments(count = 3, postContext = null, parsedComments = [], styleAnalysis = null) {
        const comments = [];
        
        for (let i = 0; i < count; i++) {
            const comment = this.generateComment(postContext, parsedComments, styleAnalysis);
            comments.push(comment);
        }
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ (—Å–∞–º—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–≤—ã–º–∏)
        comments.sort((a, b) => b.uniqueness - a.uniqueness);
        
        logger.analysis('–ì–ï–ù–ï–†–ê–¶–ò–Ø –ù–ï–°–ö–û–õ–¨–ö–ò–• –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í', {
            '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ': comments.length,
            '–°—Ä–µ–¥–Ω—è—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å': (comments.reduce((sum, c) => sum + c.uniqueness, 0) / comments.length).toFixed(2),
            '–õ—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç': comments[0] ? comments[0].text.substring(0, 40) + '...' : '–ù–µ—Ç'
        });
        
        return comments;
    }

    /**
     * –û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
     */
    resetUsedTemplates() {
        this.usedTemplates.clear();
        logger.info('üîÑ –ò—Å—Ç–æ—Ä–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –æ—á–∏—â–µ–Ω–∞');
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
module.exports = new CommentGenerator();
